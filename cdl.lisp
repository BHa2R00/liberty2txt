(defparameter *cdl-txt* "a.cdl.txt")
(defparameter *subckts* (list))
(defun read-cdl (file)
  (format t "read cdl ~A~%" file)
  (if (probe-file file)
	(with-fp-w+
	  f *cdl-txt* 
	(with-fp-r
	  s file
	  (let ((b ""))
		(format t "read cdl ~A~%" file)
		(do ((line (read-line s nil 'end) (read-line s nil 'end)))
		  ((equalp line 'end) 
		   (let ()
			 (if (pscan "\\S+" b)
			   (let ()
				 (format f "~A~%" b)
				 (setf b "")
				 )
			   (format f "~%")
			   )
			 ))
		  (if (and (pscan "\\S+" line) (not (pscan "^[\\*]+" line)))
			(let ((line1 line))
			  (if (and (pscan "\\S+" b) (pscan "^[\\+]{1}" line1))
				(let ()
				  (setf b (string+ b line1))
				  )
				(let ()
				  (if (pscan "\\S+" b)
					(let ()
					  (if (pscan "SUBCKT" b) 
						(let ((l (psplit "\\s+" b)))
						  (if (not(member (nth 1 l) *subckts* :test 'equalp))
							(push (nth 1 l) *subckts*))
						  (format t "~A~%" b)
						  ))
					  (format f "~A~%" b)
					  (setf b "")
					  ))
				  (cond
					((pscan "^[\\.]{1}" line1) 
					 (let ()
					   ;(setf line1 (preplace "^[\\.]{1}" line1 ""))
					   (setf b line1)
					   ))
					((pscan "\\S+" line1) (setf b (string+" "line1)))
					)
				  ))
			  )))
		)))
	(format t "can not read cdl file ~A~%" file)))
