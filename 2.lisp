(load "../script/liberty.lisp")
(setf *liberty-txt* "../lib/libsaed32/liberty/ccs/saed32hvt_tt0p85v25c.txt")
(if (probe-file *liberty-txt*) (exec t "/bin/rm" "-rfv" *liberty-txt*))
(setf *liberty-timing* t)
(setf *liberty-power* t)
(liberty-compiler "../lib/libsaed32/liberty/ccs/saed32hvt_tt0p85v25c.lib")
(setf *dnf-txt* "../lib/libsaed32/liberty/ccs/saed32hvt_tt0p85v25c_dnf.txt")
(if (probe-file *dnf-txt*) (exec t "/bin/rm" "-rfv" *dnf-txt*))
(dnf-compiler)
;;(format t "~A~%" (lines-match "(^|\\s+)(cell|pin|direction|clear|clocked_on|next_state|function|enable|data_in)(\\s+)(\\S+)"  (get-lib-cells "*" "*" "(\\s+)ff(\\s+)" "(\\s+)pin(\\s+)SE(\\s+)")))
;(format t "~A~%" (lines-match "(^|\\s+)(cell|pin|direction|clear|clocked_on|next_state|function|enable|data_in)(\\s+)(\\S+)"  (get-lib-cells "*" "XOR*")))
;(format t "~S~%" (eval-string-expr "(0*1')+(1*1)"))
;(format t "~A~%" (lines-match "(\\s+)pin(\\s+)(\\S+)(\\s+)direction(\\s+)input(\\s+)" (get-lib-cells "*" "MUX*")))
;(format t "~A~%" (lines-match "((^cell(\\s+))|(\\s+)pin(\\s+)(\\S+)(\\s+)direction(\\s+)input(\\s+))|((\\s+)pin(\\s+)(\\S+)(\\s+)direction(\\s+)output(\\s+)(\\s+)function(\\s+)(\\S+)(\\s+))" (get-lib-cells "*" "MUX2*")))
;(format t "~A~%" (lines-match "(^|\\s+)(cell|pin|direction|clear|clocked_on|next_state)(\\s+)(\\S+)"  (get-lib-cells "*" "*" "(\\s+)ff(\\s+)")))
(setf *liberty-txt* "../lib/libsmic55/lib/1.2v/scc55nll_hs_rvt_tt_v1p2_25c_basic.txt")
(if (probe-file *liberty-txt*) (exec t "/bin/rm" "-rfv" *liberty-txt*))
(setf *liberty-timing* t)
(setf *liberty-power* t)
(liberty-compiler "../lib/libsmic55/lib/1.2v/scc55nll_hs_rvt_tt_v1p2_25c_basic.lib")
(setf *dnf-txt* "../lib/libsmic55/lib/1.2v/scc55nll_hs_rvt_tt_v1p2_25c_basic_dnf.txt")
(if (probe-file *dnf-txt*) (exec t "/bin/rm" "-rfv" *dnf-txt*))
(dnf-compiler)
;(format t "~A~%" (lines-match "(^|\\s+)(cell|pin|direction|clear|clocked_on|next_state)(\\s+)(\\S+)"  (get-lib-cells "*" "*" "(\\s+)ff(\\s+)")))
(setf *liberty-txt* "../lib/libinp/liberty/isf8l_ehs_generic_core_tt1v25c.txt")
(if (probe-file *liberty-txt*) (exec t "/bin/rm" "-rfv" *liberty-txt*))
(setf *liberty-timing* t)
(setf *liberty-power* t)
(liberty-compiler "../lib/libinp/liberty/isf8l_ehs_generic_core_tt1v25c.lib")
(setf *dnf-txt* "../lib/libinp/liberty/isf8l_ehs_generic_core_tt1v25c_dnf.txt")
(if (probe-file *dnf-txt*) (exec t "/bin/rm" "-rfv" *dnf-txt*))
(dnf-compiler)
;(format t "~A~%" (lines-match "(^|\\s+)(cell|pin|direction|clear|clocked_on|next_state)(\\s+)(\\S+)"  (get-lib-cells "*" "*" "(\\s+)ff(\\s+)")))
;(format t "~S~%" (p<-* "!CK&!D&!RN&!SN" '("D" SN) (coerce "10" 'list)))
;(format t "~S~%" (input-permutation-string-list 4))
(setf *search-path* '("../lib/libsaed32/liberty/ccs" "../lib/libsmic55/lib/1.2v" "../lib/libinp/liberty"))
(setf *target-library* '("saed32hvt_tt0p85v25c.txt" "scc55nll_hs_rvt_tt_v1p2_25c_basic.txt" "isf8l_ehs_generic_core_tt1v25c.txt"))
#|(map-libraries
  (path lib file)
  (format t "~A~%" (lines-match "(^|\\s+)(cell|cell_footprint|pin|direction|clear|clocked_on|next_state)(\\s+)(\\S+)"  (get-lib-cells "*" "*" "(\\s+)ff(\\s+)")))
  )|#
;(format t "~S~%" (eval-string-expr "(#0*#1')+(#1*#1)^#z"))
;(format t "~S~%" (p<-* "!CK&!D&!RN&!SN" '("D" SN) '("#0 #x")))
;(format t "~S~%" (input-permutation-string-list 4))
